<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="{x:Type ToolTip}">
        <Style.Resources>
            <Style TargetType="{x:Type ContentPresenter}">
                <Style.Resources>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="TextWrapping" Value="Wrap"/>
                    </Style>
                </Style.Resources>
            </Style>
        </Style.Resources>
        <Setter Property="MaxWidth" Value="335"/>
    </Style>
    <Style x:Key="CustomButton" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="8" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="CheckBoxDark" TargetType="{x:Type CheckBox}">
        <Grid Background="Transparent" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Border x:Name="Border" Height="15" Width="16" Background="#d2d2d2"
                        BorderThickness="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <Path x:Name="CheckMark" HorizontalAlignment="Center" VerticalAlignment="Center"
                          SnapsToDevicePixels="False" Stroke="#000000" StrokeThickness="2" Data="M 0 4 L 3 8 8 0" />
                </Border>
            </Grid>
            <ContentPresenter Grid.Row="1" Margin="25,0,0,1" VerticalAlignment="Center"
                              HorizontalAlignment="Left" RecognizesAccessKey="True"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="false">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter TargetName="CheckMark" Property="Data" Value="M 0 8 L 8 0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#ffffff" />
                <Setter Property="Foreground" Value="#ffffff"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Border" Property="Background" Value="#858585" />
                <Setter TargetName="CheckMark" Property="Stroke" Value="#555555"/>
                <Setter Property="Foreground" Value="#858585"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="CheckBoxWhite" TargetType="{x:Type CheckBox}">
        <Grid Background="Transparent" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Border x:Name="Border" Height="15" Width="16" Background="#ffffff" BorderThickness="1"
                        BorderBrush="#191919" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <Path x:Name="CheckMark" HorizontalAlignment="Center" VerticalAlignment="Center"
                          SnapsToDevicePixels="False" Stroke="#191919" StrokeThickness="2" Data="M 0 4 L 3 8 8 0" />
                </Border>
            </Grid>
            <ContentPresenter Grid.Row="1" Margin="25,0,0,1" VerticalAlignment="Center"
                              HorizontalAlignment="Left" RecognizesAccessKey="True"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="false">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter TargetName="CheckMark" Property="Data" Value="M 0 8 L 8 0"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="#000000"/>
                <Setter Property="Foreground" Value="#000000"/>
                <Setter TargetName="CheckMark" Property="Stroke" Value="#000000"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Border" Property="Background" Value="#AFAFAF"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="#646464"/>
                <Setter TargetName="CheckMark" Property="Stroke" Value="#646464"/>
                <Setter Property="Foreground" Value="#878787"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="RadioButtonDark" TargetType="{x:Type RadioButton}">
        <Grid Background="Transparent" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Border x:Name="Border" Margin="0,1,0,1" Height="16" Width="16" CornerRadius="100" Background="#d2d2d2"
                        BorderThickness="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <Border x:Name="CheckMark" HorizontalAlignment="Center" VerticalAlignment="Center"
                            CornerRadius="100" Width="6" Height="6" Background="#000000"/>
                </Border>
            </Grid>
            <ContentPresenter Grid.Row="1" Margin="25,0,0,1" VerticalAlignment="Center"
                              HorizontalAlignment="Left" RecognizesAccessKey="True"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="false">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#ffffff" />
                <Setter Property="Foreground" Value="#ffffff"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Border" Property="Background" Value="#858585" />
                <Setter TargetName="CheckMark" Property="Background" Value="#555555"/>
                <Setter Property="Foreground" Value="#858585"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="RadioButtonWhite" TargetType="{x:Type RadioButton}">
        <Grid Background="Transparent" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Border x:Name="Border" Margin="0,1,0,1" Height="16" Width="16" CornerRadius="100" Background="#ffffff" BorderThickness="1"
                        BorderBrush="#191919" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <Border x:Name="CheckMark" HorizontalAlignment="Center" VerticalAlignment="Center"
                            CornerRadius="100" Width="6" Height="6" Background="#191919"/>
                </Border>
            </Grid>
            <ContentPresenter Grid.Row="1" Margin="25,0,0,1" VerticalAlignment="Center"
                              HorizontalAlignment="Left" RecognizesAccessKey="True"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="false">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="#000000"/>
                <Setter Property="Foreground" Value="#000000"/>
                <Setter TargetName="CheckMark" Property="Background" Value="#000000"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Border" Property="Background" Value="#AFAFAF"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="#646464"/>
                <Setter TargetName="CheckMark" Property="Background" Value="#646464"/>
                <Setter Property="Foreground" Value="#878787"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxDark" TargetType="{x:Type ComboBox}">
        <Grid x:Name="Grid" Background="#4f4c4d">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="{Binding ElementName=Grid, Path=ActualHeight}"/>
            </Grid.ColumnDefinitions>
            <ToggleButton IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Grid.Column="1" Focusable="false" ClickMode="Press" >
                <ToggleButton.Template>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Background="#a7a5a6">
                            <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Fill="#000000" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>
                        </Grid>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Margin="6,3,6,3" TextElement.FontSize="13"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" TextElement.Foreground="#ffffff"
                              VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Center"
                     Margin="6,3,6,3" Focusable="True" Background="Transparent" Foreground="#ffffff"
                     Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                   AllowsTransparency="True" Focusable="False" PopupAnimation="None">
                <Grid Name="DropDown" SnapsToDevicePixels="True" 
                      MinWidth="{TemplateBinding ActualWidth}"
                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="DropDownBorder" Background="#4f4c4d" BorderBrush="Transparent" BorderThickness="0,2,0,0">
                        <ScrollViewer Margin="0,2,0,2" SnapsToDevicePixels="True">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="90"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#888888"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
            </Trigger>
            <Trigger Property="IsEditable"  Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxWhite" TargetType="{x:Type ComboBox}">
        <Grid x:Name="Grid" Background="#ffffff">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="{Binding ElementName=Grid, Path=ActualHeight}"/>
            </Grid.ColumnDefinitions>
            <ToggleButton IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Grid.Column="1" Focusable="false" ClickMode="Press" >
                <ToggleButton.Template>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Background="#aaaaaa">
                            <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Fill="#000000" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>
                        </Grid>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>
            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Margin="6,3,6,3" TextElement.FontSize="13"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" TextElement.Foreground="#000000"
                              VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Center"
                     Margin="6,3,6,3" Focusable="True" Background="Transparent" Foreground="#000000"
                     Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                   AllowsTransparency="True" Focusable="False" PopupAnimation="None">
                <Grid Name="DropDown" SnapsToDevicePixels="True" 
                      MinWidth="{TemplateBinding ActualWidth}"
                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="DropDownBorder" Background="#ffffff" BorderBrush="Transparent" BorderThickness="0,2,0,0">
                        <ScrollViewer Margin="0,2,0,2" SnapsToDevicePixels="True">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="90"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#888888"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
            </Trigger>
            <Trigger Property="IsEditable"  Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxItemDark" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border" SnapsToDevicePixels="true">
                        <ContentPresenter TextElement.FontSize="13" Margin="6,5,6,5"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#918f8f"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxItemWhite" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="#000000"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border" SnapsToDevicePixels="true">
                        <ContentPresenter TextElement.FontSize="13" Margin="6,5,6,5"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#aaaaaa"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>